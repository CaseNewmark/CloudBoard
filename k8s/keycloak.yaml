# Keycloak Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
  namespace: cloudboard
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:16-alpine
        command: ['sh', '-c']
        args: ['until pg_isready -h postgres-service -p 5432; do sleep 2; done']
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:23.0
        imagePullPolicy: Always
        args:
        - start-dev
        - --db=postgres
        - --db-url=jdbc:postgresql://postgres-service:5432/keycloak
        - --db-username=$(KC_DB_USERNAME)
        - --db-password=$(KC_DB_PASSWORD)
        - --hostname-strict=false
        - --hostname-strict-https=false
        - --http-enabled=true
        - --proxy=edge
        ports:
        - containerPort: 8080
        env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: KEYCLOAK_ADMIN
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: KEYCLOAK_ADMIN_PASSWORD
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        envFrom:
        - configMapRef:
            name: keycloak-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 120     # Wait 2 minutes
          periodSeconds: 60            # Check every minute
          timeoutSeconds: 30           # Allow 30 seconds for response
          failureThreshold: 5          # Allow 5 failures before restart
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60      # Wait 1 minute
          periodSeconds: 10            # Check every 10 seconds
          timeoutSeconds: 5            # 5 second timeout
          failureThreshold: 3          # Allow 3 failures

---
# Keycloak Service
apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  namespace: cloudboard
  labels:
    app: keycloak
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: keycloak

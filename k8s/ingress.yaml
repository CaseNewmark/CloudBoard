# Ingress for CloudBoard Application - Production-like setup
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloudboard-ingress
  namespace: cloudboard
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
spec:
  rules:
  # Main CloudBoard Application
  - host: cloudboard.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cloudboard-angular-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: cloudboard-api-service
            port:
              number: 8080
  
  # Keycloak Identity Service
  - host: keycloak.cloudboard.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: keycloak-service
            port:
              number: 8080

---
# NodePort Services for Development Access
# Comment out the Ingress above and use these for direct access during development

# Angular NodePort (uncomment for development)
# apiVersion: v1
# kind: Service
# metadata:
#   name: angular-nodeport
#   namespace: cloudboard
#   labels:
#     app: cloudboard-angular
# spec:
#   type: NodePort
#   ports:
#   - port: 80
#     targetPort: 80
#     nodePort: 30080
#     protocol: TCP
#   selector:
#     app: cloudboard-angular

# API NodePort (uncomment for development)
# apiVersion: v1
# kind: Service
# metadata:
#   name: api-nodeport
#   namespace: cloudboard
#   labels:
#     app: cloudboard-api
# spec:
#   type: NodePort
#   ports:
#   - port: 8080
#     targetPort: 8080
#     nodePort: 30081
#     protocol: TCP
#   selector:
#     app: cloudboard-api

# Keycloak NodePort (uncomment for development)
# apiVersion: v1
# kind: Service
# metadata:
#   name: keycloak-nodeport
#   namespace: cloudboard
#   labels:
#     app: keycloak
# spec:
#   type: NodePort
#   ports:
#   - port: 8080
#     targetPort: 8080
#     nodePort: 30082
#     protocol: TCP
#   selector:
#     app: keycloak
